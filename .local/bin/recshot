#!/bin/bash
set -euo pipefail

videos_dir=${XDG_VIDEOS_DIR:-$HOME/Videos}
cache_dir=${XDG_CACHE_DIR:-$HOME/.cache}/recshot
run_dir=${XDG_RUNTIME_DIR:-$cache_dir}
pid_file=$run_dir/recshot.pid

if [ -f "$pid_file" ]; then
	read -r PID <"$pid_file"
	if kill -0 "$PID"; then
		kill -INT "$PID"
		exit $?
	else
		echo "pid_file is stale"
	fi
fi

[ -e "$cache_dir" ] || mkdir -p "$cache_dir"

(
	function cleanup {
		rm "$pid_file"
		rm "$cache_dir/current"
	}
	trap cleanup EXIT

	rec_file="$cache_dir/rec-$(date -Iseconds).mp4"
	ln -sfv "$rec_file" "$cache_dir/current"

	wf-recorder -g "$(slurp)" -f "$rec_file" &
	rec_pid=$!
	echo $rec_pid >"$pid_file"
	notify-send "Start recording" "$rec_file"

	wait $rec_pid

	if [ ! -f "$rec_file" ]; then
		notify-send "Recording aborted"
	else
    dest_file="$videos_dir/$(basename "$rec_file")"

    [ -e "$videos_dir" ] || mkdir -p "$videos_dir"
    mv "$rec_file" "$dest_file"
		notify-send "Done recording" "$dest_file"
	fi

) &
